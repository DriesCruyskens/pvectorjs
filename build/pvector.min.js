function PVector(a,b,c){return 1===arguments.length?new PVector(a.x||0,a.y||0,a.z||0):this instanceof PVector?void(this.x=a||0,this.y=b||0,this.z=c||0):new PVector(a||0,b||0,c||0)}PVector.fromObject=a=>new PVector(a),PVector.fromArray=a=>new PVector(...a),PVector.fromAngle=a=>new PVector(Math.cos(a),Math.sin(a)),PVector.random2D=()=>PVector.fromAngle(2*(Math.random()*Math.PI)),PVector.random3D=()=>{const a=2*(Math.random()*Math.PI),b=2*Math.random()-1,c=Math.sqrt(1-b*b),d=c*Math.cos(a),e=c*Math.sin(a);return new PVector(d,e,b)},PVector.random=(a,b)=>{const c=PVector(Math.random(),Math.random(),Math.random());return a instanceof PVector?b instanceof PVector?c.mult(b.clone().sub(a)).add(a):c.mult(a):c},PVector.angleBetween=(a,b)=>Math.acos(a.dot(b)/Math.sqrt(a.magSq()*b.magSq())),PVector.radians2degrees=a=>a*(180/Math.PI),PVector.degrees2radians=a=>a/(180/Math.PI),PVector.lerpVal=(c,a,b)=>c+(a-c)*b,PVector.prototype={clone:function(){return new PVector(this.x,this.y,this.z)},set:function(a,b,c){return 1===arguments.length?this.set(a.x||0,a.y||0,a.z||0):(this.x=a||0,this.y=b||0,this.z=c||0),this},setX:function(a){return this.x="number"==typeof a?a:a.x,this},setY:function(a){return this.y="number"==typeof a?a:a.y,this},setZ:function(a){return this.z="number"==typeof a?a:a.z,this},invert:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},invertX:function(){return this.x*=-1,this},invertY:function(){return this.y*=-1,this},invertZ:function(){return this.z*=-1,this},norm:function(){const a=this.magSq();return 0<a&&this.div(Math.sqrt(a)),this},setMag:function(a){return(a instanceof PVector&&(a=a.mag()),0===this.magSq())?this.set(a,0,0):(this.norm(),this.mult(a),this)},minMag:function(a){return a instanceof PVector&&(a=a.mag()),this.magSq()<a*a&&(this.norm(),this.mult(a)),this},maxMag:function(a){return a instanceof PVector&&(a=a.mag()),this.magSq()>a*a&&(this.norm(),this.mult(a)),this},clampMag:function(a,b){return this.minMag(a),this.maxMag(b),this},min:function(a){return this.minX(a),this.minY(a),this.minZ(a),this},minX:function(a){return a=a.x||a,this.x<a&&(this.x=a),this},minY:function(a){return a=a.y||a,this.y<a&&(this.y=a),this},minZ:function(a){return a=a.z||a,this.z<a&&(this.z=a),this},max:function(a){return this.maxX(a),this.maxY(a),this.maxZ(a),this},maxX:function(a){return a=a.x||a,this.x>a&&(this.x=a),this},maxY:function(a){return a=a.y||a,this.y>a&&(this.y=a),this},maxZ:function(a){return a=a.z||a,this.z>a&&(this.z=a),this},clamp:function(a,b){return this.clampX(a,b),this.clampY(a,b),this.clampZ(a,b),this},clampX:function(a,b){return a=a.x||a,b=b.x||b,this.x<a?this.x=a:this.x>b&&(this.x=b),this},clampY:function(a,b){return a=a.y||a,b=b.y||b,this.y<a?this.y=a:this.y>b&&(this.y=b),this},clampZ:function(a,b){return a=a.z||a,b=b.z||b,this.z<a?this.z=a:this.z>b&&(this.z=b),this},rotateTo:function(a){const b=this.mag();return this.x=Math.cos(a)*b,this.y=Math.sin(a)*b,this},rotateBy:function(a){return a+=this.angle2D(),this.rotateTo(a)},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},toFixed:function(a){return"undefined"==typeof a&&(a=8),this.x=parseFloat(this.x.toFixed(a)),this.y=parseFloat(this.y.toFixed(a)),this.z=parseFloat(this.z.toFixed(a)),this},zero:function(){return this.x=this.y=this.z=0,this},add:function(a){return this.addX(a),this.addY(a),this.addZ(a),this},addX:function(a){return this.x+="number"==typeof a?a:a.x,this},addY:function(a){return this.y+="number"==typeof a?a:a.y,this},addZ:function(a){return this.z+="number"==typeof a?a:a.z,this},sub:function(a){return this.subX(a),this.subY(a),this.subZ(a),this},subX:function(a){return this.x-="number"==typeof a?a:a.x,this},subY:function(a){return this.y-="number"==typeof a?a:a.y,this},subZ:function(a){return this.z-="number"==typeof a?a:a.z,this},mult:function(a){return this.multX(a),this.multY(a),this.multZ(a),this},multX:function(a){return this.x*="number"==typeof a?a:a.x,this},multY:function(a){return this.y*="number"==typeof a?a:a.y,this},multZ:function(a){return this.z*="number"==typeof a?a:a.z,this},div:function(a){return this.divX(a),this.divY(a),this.divZ(a),this},divX:function(a){return this.x/="number"==typeof a?a:a.x,this},divY:function(a){return this.y/="number"==typeof a?a:a.y,this},divZ:function(a){return this.z/="number"==typeof a?a:a.z,this},lerp:function(a,b){return this.lerpX(a,b),this.lerpY(a,b),this.lerpZ(a,b),this},lerpX:function(a,b){return this.x="number"==typeof a?PVector.lerpVal(this.x,a,b):PVector.lerpVal(this.x,a.x,b),this},lerpY:function(a,b){return this.y="number"==typeof a?PVector.lerpVal(this.y,a,b):PVector.lerpVal(this.y,a.y,b),this},lerpZ:function(a,b){return this.z="number"==typeof a?PVector.lerpVal(this.z,a,b):PVector.lerpVal(this.z,a.z,b),this},cross:function(a){return this.x=this.y*a.z-a.y*this.z,this.y=this.z*a.x-a.z*this.x,this.z=this.x*a.y-a.x*this.y,this},projectOnto:function(a){const b=(this.x*a.x+this.y*a.y+this.z*a.z)/(a.x**2+a.y**2+a.z**2);return this.x=b*a.x,this.y=b*a.y,this.z=b*a.z,this},func:function(a){return a(this),this},mag:function(){return arguments[0]?this.setMag(arguments[0]):Math.sqrt(this.magSq())},magSq:function(){return this.x**2+this.y**2+this.z**2},dist:function(a){return Math.sqrt(this.distSq(a))},distX:function(a){return a.x-this.x},distY:function(a){return a.y-this.y},distZ:function(a){return a.z-this.z},distSq:function(a){return this.distX(a)**2+this.distY(a)**2},manhattanDist:function(a){return this.distX(a)+this.distY(a)+this.distZ(a)},angle2D:function(){return arguments[0]?this.rotateTo(arguments[0]):Math.atan2(this.y,this.x)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},isZero:function(){return 1e-8>this.magSq()},isEqual:function(a){return this.x===a.x&&this.y===a.y&&this.z===a.z},toString:function(){return"{ x: "+this.x+", y: "+this.y+", z: "+this.z+" }"},toObject:function(){return{x:this.x,y:this.y,z:this.z}},toArray:function(){return[this.x,this.y,this.z]}};function createPVectorMethod(a){return function(b,...c){const d=b.clone();return d[a](...c),d}}for(let a in PVector.prototype)PVector.prototype.hasOwnProperty(a)&&!PVector.hasOwnProperty(a)&&(PVector[a]=createPVectorMethod(a));exports=module.exports=PVector;